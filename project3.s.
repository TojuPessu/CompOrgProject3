.data
    emptyInput: .asciiz "Input is empty." #creates message for string with an empty input
    longInput: .asciiz "Input it is too long." #messgae for string that has more than 4 characters
    invalidInput: .asciiz "Invalid base-35 number." 
characters not in set
    userI: .space 1000
.text
     main:
        li $v0, 8 
        la $a0, userI #stores address of string
        li $a1, 500 #creates space for string input
        syscall
        add $t0, $0, 0 #initialize $t0 register
        add $t1, $0, 0 #initialize $t1 register
        
        la $t2, userI 
        lb $t0, 0($t2)
        beq $t0, 10, isEmpty #checks if a string is empty
        beq $t0, 0 isEmpty
        
        addi $s0, $0, 35 #store Base-N number
        addi $t3, $0, 1 
        addi $t4, $0, 0
        addi $t5, $0, 0
        
        ignoreSpaces:
            lb $t0, 0($t2) #load address in $t2 to $t0
            addi $t2, $t2, 1 #increment pointer
            addi $t1, $t1, 1 #increment counter
            beq $t0, 32, ignoreSpaces 
            beq $t0, 10, isEmpty 
            beq $t0, $0, isEmpty 
            
        viewChars:
            lb $t0, 0($t2)
            addi $t2, $t2, 1
            addi $t1, $t1, 1
            beq $t0, 10, restart
            beq $t0, 0, restart
            bne $t0, 32, viewChars










